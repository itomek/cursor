// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+shift+k",
        "command": "-aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-aiSettings.action.open",
        "when": "!isSettingsPaneOpen"
    },
    {
        "key": "ctrl+alt+e",
        "command": "aichat.fixerrormessage",
        "when": "(arbitrary function)"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-aichat.fixerrormessage",
        "when": "(arbitrary function)"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+alt+l",
        "command": "aichat.insertselectionintochat"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-aichat.insertselectionintochat"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "composerMode.plan"
    },
    {
        "key": "ctrl+alt+i",
        "command": "composerMode.chat"
    },
    {
        "key": "ctrl+shift+i",
        "command": "composerMode.agent"
    },
    {
        "key": "ctrl+e",
        "command": "aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
    {
        "key": "ctrl+e",
        "command": "cursorai.action.generateInTerminal",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "cursorai.action.rejectGenerateInTerminal",
        "when": "terminalFocus && terminalHasBeenCreated || terminalProcessSupported && @terminal.canRejectGeneration"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-cursorai.action.rejectGenerateInTerminal",
        "when": "terminalFocus && terminalHasBeenCreated || terminalProcessSupported && @terminal.canRejectGeneration"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "cursorai.action.cancelGenerateInTerminal",
        "when": "terminalFocus && terminalHasBeenCreated || terminalProcessSupported && @terminal.canCancelGeneration"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-cursorai.action.cancelGenerateInTerminal",
        "when": "terminalFocus && terminalHasBeenCreated || terminalProcessSupported && @terminal.canCancelGeneration"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "cursorai.action.dismissBugBotLint",
        "when": "editorTextFocus && @bugbotLinter.isBugLintActive"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-cursorai.action.dismissBugBotLint",
        "when": "editorTextFocus && @bugbotLinter.isBugLintActive"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "chatEditor.action.reject",
        "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress || chat.hasNotebookEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-chatEditor.action.reject",
        "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress || chat.hasNotebookEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "editor.action.inlineDiffs.cancelPromptBar",
        "when": "editorTextFocus && hasActivelyGeneratingPromptBarDiff"
    },
    {
        "key": "ctrl+backspace",
        "command": "-editor.action.inlineDiffs.cancelPromptBar",
        "when": "editorTextFocus && hasActivelyGeneratingPromptBarDiff"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "editor.action.cancelGPT4WithCmdDelete",
        "when": "hadGPT4InlineCompletionRunning"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-editor.action.cancelGPT4WithCmdDelete",
        "when": "hadGPT4InlineCompletionRunning"
    },
    {
        "key": "ctrl+k",
        "command": "-aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
    {
        "key": "ctrl+shift+[",
        "command": "workbench.action.previousEditor",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+]",
        "command": "workbench.action.nextEditor",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+]",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+[",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+]",
        "command": "composer.nextChatTab",
        "when": "focusedView =~ /^workbench.panel.aichat.view/"
    },
    {
        "key": "ctrl+shift+[",
        "command": "composer.previousChatTab",
        "when": "focusedView =~ /^workbench.panel.aichat.view/"
    },
    {
        "key": "ctrl+shift+alt+]",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+alt+[",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+alt+[",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
]